
Debian、Ubuntu系列
***安装软件***
基于apt-get方式：
apt-get install 软件名
（还有基于aptitude方式的，配置不同的安装源即可）

***卸载软件***
基于apt-get方式：
sudo apt-get autoremove --purge 软件名
参数说明：
sudo——获取 root 权限 
apt-get——执行安装卸载功能的软件 
autoremove——告诉 apt-get 我们所要做的操作是移除软件 
–purge——注意这前面是两个短划线，这个参数是告诉他们要完整的干净的彻底的移除
eg: sudo apt-get autoremove --purge php5-mysql


以下为Linux通用命令
***切换目录***
cd 文件夹路径
eg: cd /var/www

***显示当前目录包含的文件夹和文件***
ls
eg: ls

***查看文件里面的内容信息***
cat 文件路径
eg: cat /var/www/index.html

***创建目录***
mkdir [选项] 文件夹路径
选项说明：
　　-m=mode为目录指定访问权限，与chmod类似。
　　-p　　如果目录已经存在，则不会有错误提示。若父目录不存在，将会创建父目录。该选项常用于创建级联目录。
　　-v　　为每个目录显示提示信息。
eg: mkdir -p /var/www/log


***删除文件或者文件夹***（删除文件夹要加-r命令）
rm rf 文件夹或文件路径
eg： rm -rf /var/www/index.html
注：-r 就是向下递归，不管有多少级目录，一并删除
-f 就是直接强行删除，不作任何提示的意思
-i 交互模式，在删除前询问用户是否操作

删除文件夹实例：rm -rf /var/log/httpd/access
将会删除/var/log/httpd/access目录以及其下所有文件、文件夹

删除文件使用实例：rm -f /var/log/httpd/access.log
将会强制删除/var/log/httpd/access.log这个文件

***复制文件或文件夹***
命令格式：cp [-adfilprsu] 源文件(source) 目标文件(destination)
cp [option] source1 source2 source3 ... directory
参数说明：
-a:是指archive的意思，也说是指复制所有的目录
-d:若源文件为连接文件(link file)，则复制连接文件属性而非文件本身
-f:强制(force)，若有重复或其它疑问时，不会询问用户，而强制复制
-i:若目标文件(destination)已存在，在覆盖时会先询问是否真的操作
-l:建立硬连接(hard link)的连接文件，而非复制文件本身
-p:与文件的属性一起复制，而非使用默认属性
-r:递归复制，用于目录的复制操作
-s:复制成符号连接文件(symbolic link)，即“快捷方式”文件
-u:若目标文件比源文件旧，更新目标文件 


如将/test1目录下的file1复制到/test3目录，并将文件名改为file2,可输入以下命令：
eg: cp /test1/file1 /test3/file2

***移动文件或文件夹***
命令格式：mv [-fiv] source destination
参数说明：
-f:force，强制直接移动而不询问
-i:若目标文件(destination)已经存在，就会询问是否覆盖
-u:若目标文件已经存在，且源文件比较新，才会更新


如将/test1目录下的file1复制到/test3 目录，并将文件名改为file2,可输入以下命令：
eg: mv /test1/file1 /test3/file2


***linux下查看mysql端口号***
进入mysql： mysql -u root -p
查看端口号： show global variables like 'port';


***在Linux Debian下安装node.js方法***
1、更新系统和安装所需软件
apt-get update -y
apt-get install -y build-essential curl

2、安装最新版本v8.1.2
curl -sL https://deb.nodesource.com/setup_8.x | sudo -E bash -   //注这个只能安装8.x版本的nodejs

注：如果这里提醒sudo命令不存在则需要安装sudo或者配置变量环境
2.1、安装sudo
	apt-get install sudo
2.2、 如果/etc/sudoers.d 文件存在则说明你的系统已经安装啦，只不过没有配置环境 
	当你使用sudo去执行一个程序时，处于安全的考虑，这个程序将在一个新的、最小化的环境中执行，也就是说，诸如PATH这样的环境变量，在sudo命令下已经被重置成默认状态了。所以当一个刚初始化的PATH变量中不包含你所要运行的程序所在的目录，用sudo去执行，你就会得到"command not found"的错误提示。

	要想改变PATH在sudo会话中的初始值，用文本编辑器打开/etc/sudoers文件，找到"secure_path"一行，当你执行sudo 命令时，"secure_path"中包含的路径将被当做默认PATH变量使用。

	添加所需要的路径(如 /usr/local/bin）到"secure_path"下，在开篇所遇见的问题就将迎刃而解。
	Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin

3、安装nodejs
	apt-get install nodejs

4、检查版本
	node -v

5、检查linux指定端口号是否启用
	netstat -anp|grep 3000 //查看3000是否启用，如果启用了端口，则会显示信息
